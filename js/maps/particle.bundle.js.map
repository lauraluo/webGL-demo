{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/particle.jsx"],"names":[],"mappings":"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","file":"../../webgl/particle.bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","\n    // global variables\n    var renderer;\n    var scene;\n    var camera;\n    var geom;\n    var control;\n    var avgVertexNormals = [];\n    var avgVertexCount = [];\n    var colors = [];\n    var doExplode = false;\n    var orbit;\n\n    function init() {\n\n        // create a scene, that will hold all our elements such as objects, cameras and lights.\n        scene = new THREE.Scene();\n\n        // create a camera, which defines where we're looking at.\n        camera = new THREE.PerspectiveCamera(45, window.innerWidth / window.innerHeight, 0.1, 10000);\n\n        // create a render, sets the background color and the size\n        renderer = new THREE.WebGLRenderer();\n        renderer.setClearColor(0x000000, 1.0);\n        renderer.setSize(window.innerWidth, window.innerHeight);\n\n        // add light\n        var light = new THREE.DirectionalLight();\n        light.position.set(1200, 1200, 1200);\n        scene.add(light);\n\n        // position and point the camera to the center of the scene\n        // 不知為何光不見了就看不到\n        camera.position.x = 0;\n        camera.position.y = 0;\n        camera.position.z = 1000;\n        camera.lookAt(scene.position);\n\n        // add the output of the renderer to the html element\n        document.body.appendChild(renderer.domElement);\n\n        orbit = new THREE.OrbitControls(camera);\n        control = new function () {\n            this.explode = function () {\n                doExplode = true;\n            }\n            this.implode = function () {\n                doExplode = false;\n            }\n            this.scale = 0.1;\n        };\n        addControls(control);\n\n        createGeometryFromMap();\n\n\n        \n    }\n\n    function createGeometryFromMap() {\n        var depth = 512;\n        var width = 512;\n\n        var spacingX = 1;\n        var spacingZ = 1;\n        var heightOffset = 2;\n\n        var canvas = document.createElement('canvas');\n        canvas.width = 512;\n        canvas.height = 512;\n        var ctx = canvas.getContext('2d');\n\n        var img = new Image();\n        img.src = \"images/demo2.png\";\n        img.onload = function () {\n            // draw on canvas\n            ctx.drawImage(img, 0, 0);\n            var pixel = ctx.getImageData(0, 0, width, depth);\n            // console.log(pixel.data.length );//1048576\n            //data長度為 128 取RGBA陣列中的A data長度為 512*512*4 其中的4代表每px的rgba\n            var matColors = math.multiply(math.ones(512, 512), '');\n\n            geom = new THREE.Geometry;\n\n            var output = [];\n            for (let x = 0; x < depth; x++) {\n\n                for (let z = 0; z < width; z++) {\n                    matColors._data[z][x] = 'rgb('+ ([\n                        pixel.data[(x*4) + z * depth * 4],\n                        pixel.data[(x*4)+1 + z * depth * 4],\n                        pixel.data[(x*4)+2 + z * depth * 4]\n                    ].join(','))+')';\n\n\n                    // colors.push(new THREE.Color('rgba(255,255,255)'));\n                    // get pixel\n                    // since we're grayscale, we only need one element\n                    //每張圖取出來的px資料，是代表rgba的256色陣列\n                    //*4，跳四格取第4個a的透明度作為高度(y軸)參考\n                    //* spacing 放大比例尺也許是比較好看？\n                    var yValue = pixel.data[z * 4 + (depth * x * 4)] / heightOffset;\n                    var vertex = new THREE.Vector3(x * spacingX, yValue , z * spacingZ);\n                    geom.vertices.push(vertex);\n\n                }\n            }\n\n            math.forEach(matColors, function(value) {\n                colors.push(new THREE.Color(value));\n            });\n            geom.colors = colors;\n\n\n            geom.applyMatrix(new THREE.Matrix4().makeRotationX(Math.PI / 2));\n            geom.applyMatrix(new THREE.Matrix4().makeRotationZ(-Math.PI / 2));\n\n\n\n            //制作面\n            // we create a rectangle between four vertices, and we do\n            // that as two triangles.\n            for (let z = 0; z < depth - 1; z++) {\n                for (let x = 0; x < width - 1; x++) {\n                    // we need to point to the position in the array\n                    // a - - b\n                    // |  x  |\n                    // c - - d\n                    var a = x + z * width;\n                    var b = (x + 1) + (z * width);\n                    var c = x + ((z + 1) * width);\n                    var d = (x + 1) + ((z + 1) * width);\n\n                    var face1 = new THREE.Face3(a, b, d);\n                    var face2 = new THREE.Face3(d, c, a);\n\n                    geom.faces.push(face1);\n                    geom.faces.push(face2);\n                }\n            }\n\n            geom.computeVertexNormals();\n            geom.computeFaceNormals();\n            geom.computeBoundingBox();\n\n            createParticleSystemFromGeometry(geom);\n        };\n\n    }\n\n    function getHighPoint(geometry, face) {\n        //face中有原生的3個abc屬性\n        var v1 = geometry.vertices[face.a].y;\n        var v2 = geometry.vertices[face.b].y;\n        var v3 = geometry.vertices[face.c].y;\n        // console.log(face.a);\n        return Math.max(v1, v2, v3);\n    }\n\n    function createParticleSystemFromGeometry(geom) {\n\n\n        geom.vertices.forEach(function (v) {\n            v.velocity = Math.random();\n        });\n\n        \n        var loader = new THREE.TextureLoader();\n        \n\n        var psMat = new THREE.PointsMaterial();\n        psMat.vertexColors = THREE.VertexColors;\n        // psMat.blending = THREE.AdditiveBlending;\n        // psMat.transparent = true;\n        // psMat.alphaTest = 0.8;\n\n        var ps = new THREE.Points(geom, psMat);\n        ps.sortParticles = true;\n        // ps.rotation.x = Math.PI / 2;\n\n        ps.translateX(206);\n        ps.translateY(206);\n        scene.add(ps);\n\n        for (let i = 0; i < geom.vertices.length; i++) {\n            avgVertexNormals.push(new THREE.Vector3(0, 0, 0));\n            avgVertexCount.push(0);\n        }\n\n        // first add all the normals \n        // 可以把每個 F 想成組合成3d物件的許多三角型\n        geom.faces.forEach(function (f) {\n            \n            //取得三個頂點的法向量\n            var vA = f.vertexNormals[0];\n            var vB = f.vertexNormals[1];\n            var vC = f.vertexNormals[2];\n\n            // update the count\n            // 將index計數 例如 avgVertexCount[128] +=1  先把所有出現過的座標計數\n            // 要注意f.a f.b f.c 是 index \n            // 其目的是用來減少頂點的座標存取的資訊，所以會有重複的座標\n            avgVertexCount[f.a] += 1; \n            avgVertexCount[f.b] += 1;\n            avgVertexCount[f.c] += 1;\n\n            // 將對應index的方向量值給加進去 作向量的加總\n            avgVertexNormals[f.a].add(vA);\n            avgVertexNormals[f.b].add(vB);\n            avgVertexNormals[f.c].add(vC);\n\n        });\n\n        // 算出每個向量的平均值\n        // then calculate the average\n        for (var i = 0; i < avgVertexNormals.length; i++) {\n            avgVertexNormals[i].divideScalar(avgVertexCount[i]);\n        }\n\n        // call the render function\n        render();\n\n    }\n\n    function explode(outwards) {\n\n\n        var dir = outwards === true ? -1 : 1;\n\n        var count = 0;\n        geom.vertices.forEach(function (v) {\n            v.x += (avgVertexNormals[count].x * v.velocity * control.scale) * dir;\n            v.y += (avgVertexNormals[count].y * v.velocity * control.scale) * dir;\n            v.z += (avgVertexNormals[count].z * v.velocity * control.scale) * dir;\n\n\n            count++;\n        });\n        geom.verticesNeedUpdate = true;\n    }\n\n\n    function addControls(controlObject) {\n        var gui = new dat.GUI();\n        gui.add(controlObject, 'explode');\n        gui.add(controlObject, 'implode');\n        gui.add(controlObject, 'scale', 0, 2).step(0.01);\n    }\n\n    function render() {\n        renderer.render(scene, camera);\n        \n        orbit.update();\n        \n        if (doExplode) {\n            explode(true);\n        } else {\n            explode(false);\n        }\n\n        requestAnimationFrame(render);\n    }\n\n    // calls the init function when the window is done loading.\n    window.onload = init;"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}